import{f as M,g as V,i as A,l as j,k as w}from"./QPage-DNhbTL6L.js";import{c as G,a as o,h as d,g as E,_ as F,r as B,o as H,L as m,S as P,O as l,M as k,N as i,Y as I,Z as L,T as x,R as y,Q as v,a1 as O}from"./index-BG_GJT5J.js";import{b as R}from"./format-C_kfbgOa.js";import{Q as W,a as $,c as Y,b as Z}from"./QCardActions-HGNTAPwE.js";const J={...M,min:{type:Number,default:0},max:{type:Number,default:100},color:String,centerColor:String,trackColor:String,fontSize:String,rounded:Boolean,thickness:{type:Number,default:.2,validator:e=>e>=0&&e<=1},angle:{type:Number,default:0},showValue:Boolean,reverse:Boolean,instantFeedback:Boolean},b=50,N=2*b,q=N*Math.PI,K=Math.round(q*1e3)/1e3,U=G({name:"QCircularProgress",props:{...J,value:{type:Number,default:0},animationSpeed:{type:[String,Number],default:600},indeterminate:Boolean},setup(e,{slots:a}){const{proxy:{$q:f}}=E(),u=V(e),h=o(()=>{const r=(f.lang.rtl===!0?-1:1)*e.angle;return{transform:e.reverse!==(f.lang.rtl===!0)?`scale3d(-1, 1, 1) rotate3d(0, 0, 1, ${-90-r}deg)`:`rotate3d(0, 0, 1, ${r-90}deg)`}}),n=o(()=>e.instantFeedback!==!0&&e.indeterminate!==!0?{transition:`stroke-dashoffset ${e.animationSpeed}ms ease 0s, stroke ${e.animationSpeed}ms ease`}:""),t=o(()=>N/(1-e.thickness/2)),s=o(()=>`${t.value/2} ${t.value/2} ${t.value} ${t.value}`),g=o(()=>R(e.value,e.min,e.max)),Q=o(()=>e.max-e.min),_=o(()=>e.thickness/2*t.value),T=o(()=>{const r=(e.max-g.value)/Q.value,c=e.rounded===!0&&g.value<e.max&&r<.25?_.value/2*(1-r/.25):0;return q*r+c});function C({thickness:r,offset:c,color:S,cls:z,rounded:D}){return d("circle",{class:"q-circular-progress__"+z+(S!==void 0?` text-${S}`:""),style:n.value,fill:"transparent",stroke:"currentColor","stroke-width":r,"stroke-dasharray":K,"stroke-dashoffset":c,"stroke-linecap":D,cx:t.value,cy:t.value,r:b})}return()=>{const r=[];e.centerColor!==void 0&&e.centerColor!=="transparent"&&r.push(d("circle",{class:`q-circular-progress__center text-${e.centerColor}`,fill:"currentColor",r:b-_.value/2,cx:t.value,cy:t.value})),e.trackColor!==void 0&&e.trackColor!=="transparent"&&r.push(C({cls:"track",thickness:_.value,offset:0,color:e.trackColor})),r.push(C({cls:"circle",thickness:_.value,offset:T.value,color:e.color,rounded:e.rounded===!0?"round":void 0}));const c=[d("svg",{class:"q-circular-progress__svg",style:h.value,viewBox:s.value,"aria-hidden":"true"},r)];return e.showValue===!0&&c.push(d("div",{class:"q-circular-progress__text absolute-full row flex-center content-center",style:{fontSize:e.fontSize}},a.default!==void 0?a.default():[d("div",g.value)])),d("div",{class:`q-circular-progress q-circular-progress--${e.indeterminate===!0?"in":""}determinate`,style:u.value,role:"progressbar","aria-valuemin":e.min,"aria-valuemax":e.max,"aria-valuenow":e.indeterminate===!0?void 0:g.value},A(a.internal,c))}}}),X={name:"MeusProjetos",setup(){const e=B([]),a=B(!0),f=async()=>{const n=Date.now();try{const s=await(await fetch("https://api.github.com/users/EmanuelAngelo/repos")).json();e.value=s}catch(t){console.error("Erro ao buscar projetos do GitHub:",t)}finally{const s=3e3-(Date.now()-n);s>0?setTimeout(()=>{a.value=!1},s):a.value=!1}},u=o(()=>[...e.value].sort((n,t)=>{const s=new Date(n.created_at);return new Date(t.created_at).getTime()-s.getTime()})),h=o(()=>u.value.filter(n=>n.topics&&n.topics.length>0&&n.language));return H(()=>{f()}),{projects:e,filteredProjects:h,loading:a}}},p={key:0,class:"loading-container"},ee={key:1,class:"row items-start q-gutter-md justify-center"},te={class:"text-h6"},ae={class:"text-subtitle2"};function re(e,a,f,u,h,n){return m(),P(j,{class:"q-pa-md"},{default:l(()=>[u.loading?(m(),k("div",p,[i(U,{indeterminate:"",rounded:"",size:"50px",color:"lime",class:"q-ma-md"})])):(m(),k("div",ee,[(m(!0),k(I,null,L(u.filteredProjects,(t,s)=>(m(),k("div",{key:s,class:"col-12 col-sm-6 col-md-3"},[i(W,{class:"my-card bg-secondary text-white"},{default:l(()=>[i($,null,{default:l(()=>[x("div",te,y(t.name),1),x("div",ae,[v(" Linguagem: "+y(t.language||"Sem linguagem definida"),1),a[0]||(a[0]=x("br",null,null,-1)),v(" Tópicos: "+y(t.topics.join(", ")),1)])]),_:2},1024),i($,null,{default:l(()=>[v(y(t.description||"Descrição não disponível."),1)]),_:2},1024),i(Y,{dark:""}),i(Z,null,{default:l(()=>[i(w,{flat:"",color:"primary",href:t.html_url,target:"_blank"},{default:l(()=>a[1]||(a[1]=[v(" Ver no GitHub ")])),_:2},1032,["href"]),t.homepage?(m(),P(w,{key:0,flat:"",color:"primary",href:t.homepage,target:"_blank"},{default:l(()=>a[2]||(a[2]=[v(" Produção ")])),_:2},1032,["href"])):O("",!0)]),_:2},1024)]),_:2},1024)]))),128))]))]),_:1})}const ie=F(X,[["render",re],["__scopeId","data-v-42fd31b6"],["__file","MeusProjetos.vue"]]);export{ie as default};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
